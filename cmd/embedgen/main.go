// Package main provides a tool to generate embed.go files for PIGO8 games
package main

import (
	"flag"
	"fmt"
	"os"
	"path/filepath"
)

func main() {
	// Parse command line flags
	outputDir := flag.String("dir", ".", "Directory where the embed.go file will be created")
	flag.Parse()

	// Check if map.json and spritesheet.json exist in the current directory
	mapPath := filepath.Join(*outputDir, "map.json")
	spritesheetPath := filepath.Join(*outputDir, "spritesheet.json")

	mapExists := fileExists(mapPath)
	spritesheetExists := fileExists(spritesheetPath)

	if !mapExists && !spritesheetExists {
		fmt.Printf("Warning: Neither map.json nor spritesheet.json found in %s\n", *outputDir)
		os.Exit(1)
	}

	// Generate the embed.go file
	content := `// Code generated by PIGO8 embedgen; DO NOT EDIT.

package main

import (
	"embed"
	
	p8 "github.com/drpaneas/pigo8"
)

// Embed the game-specific resources
//
`
	// Only include files that exist
	embedDirective := "//go:embed"
	if mapExists {
		embedDirective += " map.json"
	}
	if spritesheetExists {
		if mapExists {
			embedDirective += " "
		} else {
			embedDirective += " "
		}
		embedDirective += "spritesheet.json"
	}
	content += embedDirective + "\n"
	content += `var resources embed.FS

func init() {
	// Register the embedded resources with PIGO8
	p8.RegisterEmbeddedResources(resources, `

	// Add the correct paths based on what exists
	content += `"`
	if spritesheetExists {
		content += "spritesheet.json"
	}
	content += `", "`
	if mapExists {
		content += "map.json"
	}
	content += `")`

	content += `
}
`
	// Write the file
	outputPath := filepath.Join(*outputDir, "embed.go")
	err := os.WriteFile(outputPath, []byte(content), 0644)
	if err != nil {
		fmt.Printf("Error generating embed.go: %v\n", err)
		os.Exit(1)
	}

	fmt.Printf("Generated embed.go for PIGO8 resources in %s\n", *outputDir)
}

func fileExists(filename string) bool {
	_, err := os.Stat(filename)
	return err == nil
}
